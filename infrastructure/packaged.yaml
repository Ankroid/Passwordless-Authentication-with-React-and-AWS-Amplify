AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Amazon Cognito User Pool with Passwordless E-Mail Auth configured

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  UserPoolName:
    Type: String
    Description: The name you want the User Pool to be created with
    Default: UsingExistingDatabaseWithAWSCognito
  DbConnectionString:
    Type: String
    Description: The e-mail address to send the secret login code from
    Default: mongodb://admin:admin1@ds351827.mlab.com:51827/existing-users-db
Resources:
  DefineAuthChallenge:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://passwordless-authentication-with-existing-db/a196c7907b0255a9c18aa3e56c6432be
      Handler: define-auth-challenge.handler
      Runtime: nodejs10.x
  CreateAuthChallenge:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://passwordless-authentication-with-existing-db/b8e743bec14a16c664b4782fe35a73df
      Handler: create-auth-challenge.handler
      Runtime: nodejs10.x
      Environment:
        Variables:
          DB_CONNECTION_STRING:
            Ref: DbConnectionString
  VerifyAuthChallengeResponse:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://passwordless-authentication-with-existing-db/1c781890ce1c4738fcd5afc1c57a84ff
      Handler: verify-auth-challenge-response.handler
      Runtime: nodejs10.x
  PreSignUp:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://passwordless-authentication-with-existing-db/ed2eade0e44f44f80c8e295bef7f73f7
      Handler: pre-sign-up.handler
      Runtime: nodejs10.x
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName:
        Ref: UserPoolName
      Schema:
      - Name: name
        AttributeDataType: String
        Mutable: true
        Required: true
      - Name: email
        AttributeDataType: String
        Mutable: true
        Required: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      UsernameAttributes:
      - email
      MfaConfiguration: 'OFF'
      LambdaConfig:
        CreateAuthChallenge:
          Fn::GetAtt:
          - CreateAuthChallenge
          - Arn
        DefineAuthChallenge:
          Fn::GetAtt:
          - DefineAuthChallenge
          - Arn
        PreSignUp:
          Fn::GetAtt:
          - PreSignUp
          - Arn
        VerifyAuthChallengeResponse:
          Fn::GetAtt:
          - VerifyAuthChallengeResponse
          - Arn
  DefineAuthChallengeInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - DefineAuthChallenge
        - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - UserPool
        - Arn
  CreateAuthChallengeInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - CreateAuthChallenge
        - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - UserPool
        - Arn
  VerifyAuthChallengeResponseInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - VerifyAuthChallengeResponse
        - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - UserPool
        - Arn
  PreSignUpInvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - PreSignUp
        - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - UserPool
        - Arn
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: auth-with-existing-db
      GenerateSecret: false
      UserPoolId:
        Ref: UserPool
      ExplicitAuthFlows:
      - CUSTOM_AUTH_FLOW_ONLY
Outputs:
  UserPoolId:
    Description: ID of the User Pool
    Value:
      Ref: UserPool
  UserPoolClientId:
    Description: ID of the User Pool Client
    Value:
      Ref: UserPoolClient
